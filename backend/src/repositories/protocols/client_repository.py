"""
üë§ –ü—Ä–æ—Ç–æ–∫–æ–ª —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤ CyberKitty Practiti

–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ –ª—é–±–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ.
"""

from abc import ABC, abstractmethod
from typing import List, Optional

from ...models.client import Client, ClientCreateData, ClientUpdateData


class ClientRepositoryProtocol(ABC):
    """
    –ü—Ä–æ—Ç–æ–∫–æ–ª —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏.
    
    –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤.
    """
    
    @abstractmethod
    async def save_client(self, data: ClientCreateData) -> Client:
        """
        –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞.
        
        Args:
            data: –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞
            
        Returns:
            –°–æ–∑–¥–∞–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç —Å –ø—Ä–∏—Å–≤–æ–µ–Ω–Ω—ã–º ID
        """
        pass
    
    @abstractmethod
    async def get_client_by_id(self, client_id: str) -> Optional[Client]:
        """
        –ü–æ–ª—É—á–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ ID.
        
        Args:
            client_id: –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –∫–ª–∏–µ–Ω—Ç–∞
            
        Returns:
            –ö–ª–∏–µ–Ω—Ç –∏–ª–∏ None –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
        """
        pass
    
    @abstractmethod
    async def get_client_by_phone(self, phone: str) -> Optional[Client]:
        """
        –ü–æ–ª—É—á–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
        
        Args:
            phone: –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞
            
        Returns:
            –ö–ª–∏–µ–Ω—Ç –∏–ª–∏ None –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
        """
        pass
    
    @abstractmethod
    async def get_client_by_telegram_id(self, telegram_id: int) -> Optional[Client]:
        """
        –ü–æ–ª—É—á–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ Telegram ID.
        
        Args:
            telegram_id: Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            
        Returns:
            –ö–ª–∏–µ–Ω—Ç –∏–ª–∏ None –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
        """
        pass
    
    @abstractmethod
    async def update_client(self, client_id: str, data: ClientUpdateData) -> Optional[Client]:
        """
        –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞.
        
        Args:
            client_id: ID –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            data: –ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞
            
        Returns:
            –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç –∏–ª–∏ None –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
        """
        pass
    
    @abstractmethod
    async def delete_client(self, client_id: str) -> bool:
        """
        –£–¥–∞–ª–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞.
        
        Args:
            client_id: ID –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            
        Returns:
            True –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —É–¥–∞–ª—ë–Ω, False –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
        """
        pass
    
    @abstractmethod
    async def list_clients(
        self, 
        limit: Optional[int] = None, 
        offset: Optional[int] = None
    ) -> List[Client]:
        """
        –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤.
        
        Args:
            limit: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤
            offset: –°–º–µ—â–µ–Ω–∏–µ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
            
        Returns:
            –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤
        """
        pass
    
    @abstractmethod
    async def search_clients(self, query: str) -> List[Client]:
        """
        –ü–æ–∏—Å–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω—É.
        
        Args:
            query: –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
            
        Returns:
            –°–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
        """
        pass
    
    @abstractmethod
    async def count_clients(self) -> int:
        """
        –ü–æ–ª—É—á–∏—Ç—å –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤.
        
        Returns:
            –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤
        """
        pass 